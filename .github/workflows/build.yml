name: Cache PHP
on:
  - push
  - repository_dispatch
jobs:
  build:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:      
        operating-system: [ubuntu-20.04, ubuntu-18.04, ubuntu-16.04]
        php-versions: ['5.6', '7.0', '7.1', '7.2', '7.3', '7.4']
    name: PHP ${{ matrix.php-versions }} Test on ${{ matrix.operating-system }}
    if: "!contains(github.event.head_commit.message, 'skip-build')"
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Add PPA
      run: |
        LC_ALL=C.UTF-8 sudo apt-add-repository ppa:ondrej/php -y
        sudo DEBIAN_FRONTEND=noninteractive apt-get update
    
    - name: Clean PHP
      run: |
        sudo apt-get purge 'php*'
        sudo rm -rf /var/cache/apt/archives/*
        
    - name: Restore PHP
      run: |
        . /etc/lsb-release
        version='${{ matrix.php-versions }}'
        versions=""
        if [ "$DISTRIB_RELEASE" = "20.04" ]; then
          versions="7.4"
        elif [ "$DISTRIB_RELEASE" = "18.04" ]; then
          versions="7.1 7.2 7.3 7.4"
        elif [ "$DISTRIB_RELEASE" = "16.04" ]; then
          versions="5.6 7.0 7.1 7.2 7.3 7.4"
        fi
        for i in $versions; do
          if [ "$i" = "$version" ]; then
            curl -o /tmp/php.sh -sSL https://raw.githubusercontent.com/actions/virtual-environments/main/images/linux/scripts/installers/php.sh
            sed -i "s/\$php_versions/${{ matrix.php-versions }}/g" /tmp/php.sh
            sudo bash /tmp/php.sh || true           
          fi
        done

    - name: Setup PHP
      uses: shivammathur/setup-php@develop
      with:
        php-version: ${{ matrix.php-versions }}
      env:
        update: true
        use_package_cache: false    
        
    - name: Test PHP version
      run: php -v && php -m
        
    - name: Upload
      id: upload
      env:
        BINTRAY_KEY: ${{ SECRETS.BINTRAY_KEY }}
        BINTRAY_USER: shivammathur
        BINTRAY_REPO: php
        GITHUB_REPOSITORY: ${{ github.repository }}
        VERSION: ${{ matrix.php-versions }}
      run: |
        . /etc/lsb-release
        SEMVER=$(php -v | head -n 1 | cut -f 2 -d ' ' | cut -f 1 -d '-')        
        curl \
        --user "$BINTRAY_USER":"$BINTRAY_KEY" \
        --header "Content-Type: application/json" \
        --data " \
          {\"name\": \"$VERSION-linux\", \
          \"vcs_url\": \"$GITHUB_REPOSITORY\", \
          \"licenses\": [\"MIT\"], \
          \"public_download_numbers\": true, \
          \"public_stats\": true \
          }" \
        https://api.bintray.com/packages/"$BINTRAY_USER"/"$BINTRAY_REPO" || true
        curl -sSLO http://archive.ubuntu.com/ubuntu/pool/main/g/gcc-10/gcc-10-base_10-20200411-0ubuntu1_amd64.deb
        curl -sSLO http://archive.ubuntu.com/ubuntu/pool/main/g/gcc-10/libgcc-s1_10-20200411-0ubuntu1_amd64.deb
        curl -sSLO http://archive.ubuntu.com/ubuntu/pool/universe/libz/libzstd/zstd_1.4.4+dfsg-3_amd64.deb
        sudo DEBIAN_FRONTEND=noninteractive dpkg -i --force-conflicts ./*.deb
        sudo rm -rf ./*.deb
        zstd -V
        mkdir "$VERSION" && sudo mv /var/cache/apt/archives/*.deb ./"$VERSION"/
        if [ -e ./"$VERSION"/php"$VERSION"-cli* ]; then
          sudo tar cf - "$VERSION" | zstd -22 -T0 --ultra > php_"$VERSION"+ubuntu"$DISTRIB_RELEASE".tar.zst
          cp php_"$VERSION"+ubuntu"$DISTRIB_RELEASE".tar.zst php_"$SEMVER"+ubuntu"$DISTRIB_RELEASE".tar.zst
          curl --user "$BINTRAY_USER":"$BINTRAY_KEY" -X DELETE https://api.bintray.com/content/"$BINTRAY_USER"/"$BINTRAY_REPO"/php_"$VERSION"+ubuntu"$DISTRIB_RELEASE".tar.zst || true
          curl --user "$BINTRAY_USER":"$BINTRAY_KEY" -X DELETE https://api.bintray.com/content/"$BINTRAY_USER"/"$BINTRAY_REPO"/php_"$SEMVER"+ubuntu"$DISTRIB_RELEASE".tar.zst || true
          curl --user "$BINTRAY_USER":"$BINTRAY_KEY" -T php_"$VERSION"+ubuntu"$DISTRIB_RELEASE".tar.zst https://api.bintray.com/content/shivammathur/php/"$VERSION"-linux/"$VERSION"+ubuntu"$DISTRIB_RELEASE"/php_"$VERSION"+ubuntu"$DISTRIB_RELEASE".tar.zst || true
          curl --user "$BINTRAY_USER":"$BINTRAY_KEY" -T php_"$SEMVER"+ubuntu"$DISTRIB_RELEASE".tar.zst https://api.bintray.com/content/shivammathur/php/"$VERSION"-linux/"$VERSION"+ubuntu"$DISTRIB_RELEASE"/php_"$SEMVER"+ubuntu"$DISTRIB_RELEASE".tar.zst || true
          curl --user "$BINTRAY_USER":"$BINTRAY_KEY" -X POST https://api.bintray.com/content/"$BINTRAY_USER"/"$BINTRAY_REPO"/"$VERSION"-linux/"$VERSION"+ubuntu"$DISTRIB_RELEASE"/publish || true
        fi
        mkdir builds
        sudo mv *.zst ./builds
    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.php-versions }}
        path: builds
  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - run: mkdir builds
      - uses: actions/download-artifact@v2
        with:
          path: builds
      - name: Release
        run: |
          set -x
          curl -o install.sh -sL https://dl.bintray.com/shivammathur/php/php-ubuntu.sh 
          assets=()
          for asset in ./builds/*/*; do
            assets+=("$asset")
          done
          assets+=("./install.sh")
          version=$(date '+%Y.%m.%d')
          gh release create "$version" "${assets[@]}" -n "$version" -t "$version"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
